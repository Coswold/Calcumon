
    <!--  custom styles  -->
    <link rel="stylesheet" href="../../css/gamestyles.css">

      <div class="container">
        <!-- problem container -->
          <div class="row">
            <div class="col">
              <!-- empty div for space purposes -->
            </div>
            <div class="col-8 prob" id = "problem">
              PROBLEM
            </div>
            <div class="col">
              <!-- empty div for space purposes -->
            </div>
          </div>

          <!-- INPUT container -->
          <div class="row">
              <div class="col">
                <!-- empty div for space purposes -->
              </div>
              <div class="col-8 sol">
                <input id = "answer" placeholder="Enter solution here">
                <button>SKIP</button>
                <button id = "submit-solution" type ="submit">SUBMIT</button>
              </div>
              <div class="col">
                <!-- empty div for space purposes -->
              </div>
          </div>

          <!-- Health bars -->

          <div class="row justify-content-between health">
              <div class="col-1">
                <div id = "player-health"></div>
              </div>
              <div class="col-1">
                <div id = "opponent-health"></div>
              </div>
            </div>
          </div>

      </div>

      <script>
          let currProblem = ''
          let currSolution = ''
          let playerHealth = 100
          let opponentHealth = 100

          let playerInput = document.getElementById('answer')
          let problemDisplay = document.getElementById('problem')
          let submitButton = document.getElementById('submit-solution')
          let playerHealthDisplay = document.getElementById('player-health')
          let playerHealthDisplay = document.getElementById('opponent-health')
          
          // updates
          function update() {
              // Add a problem to the div
              if (currProblem == '') {
                  // TODO: generate new curr problem
                  // TODO: set problemDisplay.value = currProblem
                  // TODO: set currSolution to new solution
              }
              
              // check if player submitted a solution
              submitButton.onClick = function() {
                  let inp = playerInput.value // the submitted player's answer
                  let sol = verifySolution(inp) // verify this answer with currSolution
                  sendToSocket(sol) // send that to socket
              }

              // updated health for player and opponent
              let health = getFromSocket()
              if (health !== null) {
                  if (playerHealth != health[0]) {
                      playerHealth = health[0]
                      // TODO: player was attacked --> animate
                      
                      // update health bar interface
                      let perc = playerHealth+"%"
                      playerHealthDisplay.style.width= perc
                  }
                  else if (opponentHealth != health[1]) {
                      opponentHealth = health[1]
                      // TODO: opponent was attacked --> animate

                      // update heath bar interface
                      let perc = opponentHealth+"%"
                      opponentHealthDisplay.style.width= perc
                  }
                  
                  
              }
              
          }
          
          // TODO: inp = string value of player's answer
          function verifySolution(inp) {
              return true
          }

          // TODO: socket server access
          // sol = bool value of whether or not solution was correct
          function sendToSocket(sol) {
              // send that value to socket
          }

          // TODO: returns list of int values of new healths [player, opponent]
          function getFromSocket() {
              if ()
              return 0, 0
          }
          
          // will execute update every 10 milliseconds
          setInterval(update, 10);

      </script>
      